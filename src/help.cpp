#include "tetrimone.h"
#include "audiomanager.h"
#include <iostream>
#include <string>
#include <algorithm>
#ifdef _WIN32
#include <windows.h>
#include <commdlg.h>
#endif
#include "highscores.h"
#include "propaganda_messages.h"

void onAboutDialog(GtkMenuItem *menuItem, gpointer userData) {
  TetrimoneApp *app = static_cast<TetrimoneApp *>(userData);

  // Check if in retro mode
  if (app->board->retroModeActive) {
    // Create a custom Soviet-style dialog
    GtkWidget *dialog = gtk_dialog_new_with_buttons(
        "–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –°–æ–æ–±—â–µ–Ω–∏–µ: –°–∏—Å—Ç–µ–º–∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ë–ª–æ–∫–∞–º–∏", 
        GTK_WINDOW(app->window), 
        GTK_DIALOG_MODAL, 
        "_–ü–æ–Ω—è–ª!", 
        GTK_RESPONSE_OK, 
        NULL);

    // Get the content area
    GtkWidget *contentArea = gtk_dialog_get_content_area(GTK_DIALOG(dialog));
    gtk_container_set_border_width(GTK_CONTAINER(contentArea), 15);

    // Create a vertical box for layout
    GtkWidget *vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
    gtk_container_add(GTK_CONTAINER(contentArea), vbox);

    // Add program name
    GtkWidget *nameLabel = gtk_label_new(NULL);
    gtk_label_set_markup(
        GTK_LABEL(nameLabel),
        "<span size='x-large' weight='bold'>–ë–õ–û–ß–ù–ê–Ø –†–ï–í–û–õ–Æ–¶–ò–Ø</span>\n"
        "<span size='small'>(Block Revolution)</span>");
    gtk_box_pack_start(GTK_BOX(vbox), nameLabel, FALSE, FALSE, 5);

    // Add version (in classic Soviet style)
    GtkWidget *versionLabel = gtk_label_new("–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –í—ã–ø—É—Å–∫: –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –¶–∏–∫–ª 1.0");
    gtk_box_pack_start(GTK_BOX(vbox), versionLabel, FALSE, FALSE, 0);

    // Add description with humorous Russian flair
    GtkWidget *descLabel = gtk_label_new(
        "–ü–µ—Ä–µ–¥–æ–≤–∞—è –°–∏—Å—Ç–µ–º–∞ –ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏\n"
        "(Advanced Geometric Optimization System)\n\n"
        "‚òÖ –û–¥–æ–±—Ä–µ–Ω–æ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–º –ö–æ–º–∏—Ç–µ—Ç–æ–º –ë–ª–æ—á–Ω–æ–≥–æ –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è ‚òÖ\n"
        "(Approved by the Central Block Positioning Committee)\n\n"
        "–ì–¥–µ –Ω–µ—Ç –±–ª–æ–∫–æ–≤ - —Ç–∞–º –Ω–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞!\n"
        "(Where there are no blocks, there is no progress!)");
    gtk_box_pack_start(GTK_BOX(vbox), descLabel, FALSE, FALSE, 10);

    // Humorous Soviet-style achievements
    GtkWidget *achievementsLabel = gtk_label_new(NULL);
    gtk_label_set_markup(
        GTK_LABEL(achievementsLabel),
        "<span weight='bold'>–î–û–°–¢–ò–ñ–ï–ù–ò–Ø –ì–û–°–£–î–ê–†–°–¢–í–ï–ù–ù–û–ô –í–ê–ñ–ù–û–°–¢–ò:</span>\n"
        "‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–∞–¥–µ–Ω–∏—è –±–ª–æ–∫–æ–≤\n"
        "‚Ä¢ –ê–±—Å–æ–ª—é—Ç–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏\n"
        "‚Ä¢ –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞\n\n"
        "<i>–ö–∞–∂–¥—ã–π –ø–∞–¥–∞—é—â–∏–π –±–ª–æ–∫ - —É–¥–∞—Ä –ø–æ –∫–∞–ø–∏—Ç–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–æ–º—É —Ö–∞–æ—Å—É!</i>");
    gtk_box_pack_start(GTK_BOX(vbox), achievementsLabel, FALSE, FALSE, 5);

    // Add license info with Soviet humor
    GtkWidget *licenseLabel = gtk_label_new(NULL);
    gtk_label_set_markup(
        GTK_LABEL(licenseLabel),
        "–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞–º –ö–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –û–±–µ—Å–ø–µ—á–µ–Ω–∏—è\n"
        "<i>(Distributed under Collective Software Protocols)</i>");
    gtk_box_pack_start(GTK_BOX(vbox), licenseLabel, FALSE, FALSE, 5);

    // Add website button (in Soviet style)
    GtkWidget *websiteButton = gtk_link_button_new_with_label(
        "https://block-revolution.moscow.soviet", 
        "–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –ü–æ—Ä—Ç–∞–ª\n(State Information Portal)");
    gtk_box_pack_start(GTK_BOX(vbox), websiteButton, FALSE, FALSE, 10);

    // Add copyright with Russian twist
    GtkWidget *copyrightLabel = gtk_label_new(
        "¬© –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –ë—é—Ä–æ –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ë–ª–æ–∫–∞–º–∏, –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –û—Ç–¥–µ–ª–µ–Ω–∏–µ\n"
        "(State Block Management Bureau, Moscow Division)");
    gtk_box_pack_start(GTK_BOX(vbox), copyrightLabel, FALSE, FALSE, 5);

    // Add no warranty disclaimer (Soviet style)
    GtkWidget *disclaimerLabel = gtk_label_new(NULL);
    gtk_label_set_markup(
        GTK_LABEL(disclaimerLabel),
        "<span color='red'>–í–ù–ò–ú–ê–ù–ò–ï:</span> –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞\n"
        "–≤—ã—Å—à–∏–º –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–æ–º!\n"
        "<i>(Performance Guaranteed by Highest State Authority!)</i>\n\n"
        "–ù–µ—É–¥–∞—á–∞ - —ç—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–∫–∞–∂–µ–Ω–∏–µ\n"
        "–∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞!\n"
        "<i>(Failure is merely a temporary misalignment\n"
        "of collective potential!)</i>");
    gtk_box_pack_start(GTK_BOX(vbox), disclaimerLabel, FALSE, FALSE, 0);

    // Show all content
    gtk_widget_show_all(dialog);

    // Run the dialog
    gtk_dialog_run(GTK_DIALOG(dialog));

    // Destroy the dialog when closed
    gtk_widget_destroy(dialog);
  } else if (app->board->patrioticModeActive) {
    // Create a custom American patriotic-style dialog
    GtkWidget *dialog = gtk_dialog_new_with_buttons(
        "üá∫üá∏ FREEDOM BLOCKS - AMERICAN EXCELLENCE EDITION ü¶Ö", 
        GTK_WINDOW(app->window), 
        GTK_DIALOG_MODAL, 
        "_God Bless America!", 
        GTK_RESPONSE_OK, 
        NULL);

    // Get the content area
    GtkWidget *contentArea = gtk_dialog_get_content_area(GTK_DIALOG(dialog));
    gtk_container_set_border_width(GTK_CONTAINER(contentArea), 15);

    // Create a vertical box for layout
    GtkWidget *vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
    gtk_container_add(GTK_CONTAINER(contentArea), vbox);

    // Add program name with patriotic flair
    GtkWidget *nameLabel = gtk_label_new(NULL);
    gtk_label_set_markup(
        GTK_LABEL(nameLabel),
        "<span size='x-large' weight='bold' color='red'>FREEDOM BLOCKS</span>\n"
        "<span size='large' color='blue'>üá∫üá∏ AMERICAN EXCELLENCE EDITION ü¶Ö</span>\n"
        "<span size='small'>Making Block Stacking Great Again!</span>");
    gtk_box_pack_start(GTK_BOX(vbox), nameLabel, FALSE, FALSE, 5);

    // Add version (American corporate style)
    GtkWidget *versionLabel = gtk_label_new("Premium Release: Freedom Edition v1.0 üéØ");
    gtk_box_pack_start(GTK_BOX(vbox), versionLabel, FALSE, FALSE, 0);

    // Add description with American corporate marketing flair
    GtkWidget *descLabel = gtk_label_new(
        "üöÄ Revolutionary Block Management Solution\n"
        "Powered by American Innovation & Entrepreneurial Spirit\n\n"
        "‚≠ê CERTIFIED BY THE DEPARTMENT OF FREEDOM & LIBERTY ‚≠ê\n"
        "üèÜ Winner: 'Best Block Game' - American Gaming Awards üèÜ\n\n"
        "ü¶Ö Where Eagles Soar, Blocks Fall With Purpose! ü¶Ö\n"
        "Life, Liberty, and the Pursuit of Perfect Line Clears!");
    gtk_box_pack_start(GTK_BOX(vbox), descLabel, FALSE, FALSE, 10);

    // American-style features and achievements
    GtkWidget *achievementsLabel = gtk_label_new(NULL);
    gtk_label_set_markup(
        GTK_LABEL(achievementsLabel),
        "<span weight='bold' color='blue'>üá∫üá∏ FEATURES OF FREEDOM:</span>\n"
        "‚Ä¢ üí™ Maximum Block Drop Efficiency (Made in USA!)\n"
        "‚Ä¢ üéØ Precision Rotation Technology (Patent Pending)\n"
        "‚Ä¢ ‚ö° Lightning-Fast Performance (Faster than a Mustang!)\n"
        "‚Ä¢ üèà All-American Gameplay Experience\n"
        "‚Ä¢ üçî Optimized for Coffee & Gaming Sessions\n\n"
        "<i>ü¶Ö Every Block Drop is a Victory for Democracy! ü¶Ö</i>");
    gtk_box_pack_start(GTK_BOX(vbox), achievementsLabel, FALSE, FALSE, 5);

    // Add license info with American corporate style
    GtkWidget *licenseLabel = gtk_label_new(NULL);
    gtk_label_set_markup(
        GTK_LABEL(licenseLabel),
        "üìú Licensed under the American Dream Public License\n"
        "<i>üóΩ (Freedom for All, Blocks for Everyone!) üóΩ</i>");
    gtk_box_pack_start(GTK_BOX(vbox), licenseLabel, FALSE, FALSE, 5);

    // Add website button (American style)
    GtkWidget *websiteButton = gtk_link_button_new_with_label(
        "https://freedomblocks.usa.gov", 
        "üåê Official Freedom Portal\nü¶Ö Visit FreedomBlocks.USA.gov üá∫üá∏");
    gtk_box_pack_start(GTK_BOX(vbox), websiteButton, FALSE, FALSE, 10);

    // Add social media section
    GtkWidget *socialLabel = gtk_label_new(NULL);
    gtk_label_set_markup(
        GTK_LABEL(socialLabel),
        "<span weight='bold'>üì± FOLLOW US ON SOCIAL MEDIA:</span>\n"
        "üê¶ @FreedomBlocks üìò /FreedomBlocksUSA üì∏ @freedom_blocks\n"
        "üí¨ Join our Discord Community! üéÆ");
    gtk_box_pack_start(GTK_BOX(vbox), socialLabel, FALSE, FALSE, 5);

    // Add copyright with American corporate twist
    GtkWidget *copyrightLabel = gtk_label_new(
        "¬© 2025 Freedom Blocks Corporation, LLC\n"
        "üè¢ Proudly Headquartered in Silicon Valley, USA üá∫üá∏\n"
        "A Subsidiary of American Dream Enterprises");
    gtk_box_pack_start(GTK_BOX(vbox), copyrightLabel, FALSE, FALSE, 5);

    // Add warranty with American optimism
    GtkWidget *disclaimerLabel = gtk_label_new(NULL);
    gtk_label_set_markup(
        GTK_LABEL(disclaimerLabel),
        "<span color='blue'>üõ°Ô∏è SATISFACTION GUARANTEED!</span>\n"
        "üíØ 100% American-Made Quality Assurance!\n"
        "<i>ü¶Ö (If not completely satisfied, your freedom is refunded!) ü¶Ö</i>\n\n"
        "üéØ Success is just one block away!\n"
        "Failure is merely an opportunity for a comeback!\n"
        "<i>üá∫üá∏ The American Way: Never Give Up! üá∫üá∏</i>\n\n"
        "üìû Customer Support: 1-800-FREEDOM\n"
        "üí¨ Live Chat Available 24/7");
    gtk_box_pack_start(GTK_BOX(vbox), disclaimerLabel, FALSE, FALSE, 0);

    // Show all content
    gtk_widget_show_all(dialog);

    // Run the dialog
    gtk_dialog_run(GTK_DIALOG(dialog));

    // Destroy the dialog when closed
    gtk_widget_destroy(dialog);
  } else {
    // Original about dialog code
    GtkWidget *dialog = gtk_dialog_new_with_buttons(
        "About GTK Tetrimone", GTK_WINDOW(app->window), GTK_DIALOG_MODAL, "_OK",
        GTK_RESPONSE_OK, NULL);

    // Get the content area
    GtkWidget *contentArea = gtk_dialog_get_content_area(GTK_DIALOG(dialog));
    gtk_container_set_border_width(GTK_CONTAINER(contentArea), 15);

    // Create a vertical box for layout
    GtkWidget *vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, 10);
    gtk_container_add(GTK_CONTAINER(contentArea), vbox);

    // Add an image (optional)
    GtkWidget *image =
        gtk_image_new_from_icon_name("applications-games", GTK_ICON_SIZE_DIALOG);
    gtk_box_pack_start(GTK_BOX(vbox), image, FALSE, FALSE, 0);

    // Add program name
    GtkWidget *nameLabel = gtk_label_new(NULL);
    gtk_label_set_markup(
        GTK_LABEL(nameLabel),
        "<span size='x-large' weight='bold'>GTK Tetrimone</span>");
    gtk_box_pack_start(GTK_BOX(vbox), nameLabel, FALSE, FALSE, 5);

    // Add version
    GtkWidget *versionLabel = gtk_label_new("Version 1.0");
    gtk_box_pack_start(GTK_BOX(vbox), versionLabel, FALSE, FALSE, 0);

    // Add description
    GtkWidget *descLabel = gtk_label_new(
        "A feature-rich falling block puzzle game with advanced graphics,\n"
        "multiple difficulty levels, theme progression, and comprehensive\n"
        "control options including joystick support.");
    gtk_box_pack_start(GTK_BOX(vbox), descLabel, FALSE, FALSE, 10);

    // Add license info
    GtkWidget *licenseLabel =
        gtk_label_new("This software is released under the MIT License.");
    gtk_box_pack_start(GTK_BOX(vbox), licenseLabel, FALSE, FALSE, 5);

    // Add acknowledgment heading
    GtkWidget *ackHeadingLabel = gtk_label_new(NULL);
    gtk_label_set_markup(GTK_LABEL(ackHeadingLabel),
                       "<span weight='bold'>Acknowledgments:</span>");
    gtk_widget_set_halign(ackHeadingLabel, GTK_ALIGN_START);
    gtk_box_pack_start(GTK_BOX(vbox), ackHeadingLabel, FALSE, FALSE, 5);

    // Add acknowledgment text
    GtkWidget *ackLabel =
        gtk_label_new("This game is inspired by classic falling block puzzle "
                    "games that originated in the 1980s.\n"
                    "Tetrimone is an independent creation and is not "
                    "affiliated with, endorsed by,\n"
                    "or connected to any commercial puzzle game publishers.");
    gtk_box_pack_start(GTK_BOX(vbox), ackLabel, FALSE, FALSE, 0);

    // Add website button
    GtkWidget *websiteButton = gtk_link_button_new_with_label(
        "https://github.com/jasonbrianhall/tetrimone", "Website");
    gtk_box_pack_start(GTK_BOX(vbox), websiteButton, FALSE, FALSE, 10);

    // Add copyright
    GtkWidget *copyrightLabel = gtk_label_new("¬© 2025 Jason Brian Hall");
    gtk_box_pack_start(GTK_BOX(vbox), copyrightLabel, FALSE, FALSE, 5);

    // Add no warranty disclaimer
    GtkWidget *disclaimerLabel =
        gtk_label_new("This program comes with absolutely no warranty.");
    gtk_box_pack_start(GTK_BOX(vbox), disclaimerLabel, FALSE, FALSE, 0);

    GtkWidget *licenseInfoLabel = gtk_label_new(NULL);
    gtk_label_set_markup(
        GTK_LABEL(licenseInfoLabel),
        "See the <a href='https://opensource.org/licenses/MIT'>MIT License</a> "
        "for details.");
    gtk_box_pack_start(GTK_BOX(vbox), licenseInfoLabel, FALSE, FALSE, 0);

    // Show all content
    gtk_widget_show_all(dialog);

    // Run the dialog
    gtk_dialog_run(GTK_DIALOG(dialog));

    // Destroy the dialog when closed
    gtk_widget_destroy(dialog);
  }
}

void onInstructionsDialog(GtkMenuItem *menuItem, gpointer userData) {
  TetrimoneApp *app = static_cast<TetrimoneApp *>(userData);

  // Check if in retro mode
  if (app->board->retroModeActive) {
    // Create dialog with Soviet-style propaganda messaging
    GtkWidget *dialog = gtk_dialog_new_with_buttons(
        "–ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ü–ê–î–ê–Æ–©–ò–ú –ë–õ–û–ö–ê–ú", 
        GTK_WINDOW(app->window), 
        GTK_DIALOG_MODAL, 
        "_–ü–æ–Ω—è–ª! (Understood!)", 
        GTK_RESPONSE_OK, 
        NULL);

    // Get the content area
    GtkWidget *contentArea = gtk_dialog_get_content_area(GTK_DIALOG(dialog));
    gtk_container_set_border_width(GTK_CONTAINER(contentArea), 15);

    // Create a scrolled window with specific size
    GtkWidget *scrolledWindow = gtk_scrolled_window_new(NULL, NULL);
    gtk_scrolled_window_set_policy(GTK_SCROLLED_WINDOW(scrolledWindow), 
                                   GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
    gtk_widget_set_size_request(scrolledWindow, 800, 600); // Large, explicit size

    // Create a text view
    GtkWidget *textView = gtk_text_view_new();
    gtk_text_view_set_editable(GTK_TEXT_VIEW(textView), FALSE);
    gtk_text_view_set_wrap_mode(GTK_TEXT_VIEW(textView), GTK_WRAP_WORD);
    
    // Set a monospace font to ensure better readability of Russian text
    PangoFontDescription *font_desc = pango_font_description_from_string("Monospace 10");
    gtk_widget_override_font(textView, font_desc);
    pango_font_description_free(font_desc);

    // Get the buffer and set the text
    GtkTextBuffer *buffer = gtk_text_view_get_buffer(GTK_TEXT_VIEW(textView));
    gtk_text_buffer_set_text(buffer, 
        "–°–û–í–ï–†–®–ï–ù–ù–û –°–ï–ö–†–ï–¢–ù–û\n"
        "(TOP SECRET)\n\n"
        "–ò–ù–°–¢–†–£–ö–¶–ò–Ø ‚Ññ 1984/–ë-–ë–õ–û–ö\n"
        "–û –ü–†–ê–í–ò–õ–ê–• –ì–û–°–£–î–ê–†–°–¢–í–ï–ù–ù–û–ì–û –ü–ï–†–ï–ú–ï–©–ï–ù–ò–Ø –ì–ï–û–ú–ï–¢–†–ò–ß–ï–°–ö–ò–• –ï–î–ò–ù–ò–¶\n\n"
        "–í–ù–ò–ú–ê–ù–ò–ï, –¢–û–í–ê–†–ò–©!\n"
        "–ù–∞—Å—Ç–æ—è—â–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —è–≤–ª—è–µ—Ç—Å—è –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û–ô –∫ –Ω–µ—É–∫–æ—Å–Ω–∏—Ç–µ–ª—å–Ω–æ–º—É –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—é.\n"
        "–ù–µ—Å–æ–±–ª—é–¥–µ–Ω–∏–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–π –ø–µ—Ä–µ–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏.\n\n"
        "–û–°–ù–û–í–ù–´–ï –î–ò–†–ï–ö–¢–ò–í–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ë–õ–û–ö–ê–ú–ò:\n\n"
        "1. –ü–ï–†–ï–ú–ï–©–ï–ù–ò–ï –í–õ–ï–í–û/–í–ü–†–ê–í–û:\n"
        "   ‚Ä¢ –¢–æ—á–Ω–æ–µ –±–æ–∫–æ–≤–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –°–¢–†–û–ì–û –ø–æ —É–∫–∞–∑–∞–Ω–∏—é –ø–∞—Ä—Ç–∏–∏\n"
        "   ‚Ä¢ –°–∞–º–æ–≤–æ–ª—å–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∫–∞—Ä–∞–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω—ã–º –ø–µ—Ä–µ—Å–µ–ª–µ–Ω–∏–µ–º –≤ –°–∏–±–∏—Ä—å\n\n"
        "2. –í–†–ê–©–ï–ù–ò–ï:\n"
        "   ‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω–æ –¢–û–õ–¨–ö–û –ø–æ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–µ\n"
        "   ‚Ä¢ –ü—Ä–æ—Ç–∏–≤ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–∏ - –ø—Ä–∏–∑–Ω–∞–∫ –∏–¥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –¥–∏–≤–µ—Ä—Å–∏–∏!\n\n"
        "3. –í–ï–†–¢–ò–ö–ê–õ–¨–ù–û–ï –£–°–ö–û–†–ï–ù–ò–ï:\n"
        "   ‚Ä¢ –ú—è–≥–∫–æ–µ –æ–ø—É—Å–∫–∞–Ω–∏–µ: –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–µ –ø–∞–¥–µ–Ω–∏–µ\n"
        "   ‚Ä¢ –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ: –≤—ã—Å—à–∞—è —Ñ–æ—Ä–º–∞ –±–ª–æ—á–Ω–æ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã\n\n"
        "–°–ò–°–¢–ï–ú–ê –û–¶–ï–ù–ö–ò –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò:\n"
        "‚Ä¢ –ö–∞–∂–¥–∞—è –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–∞—è –ª–∏–Ω–∏—è - —É–¥–∞—Ä –ø–æ –∫–∞–ø–∏—Ç–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–æ–º—É —Ö–∞–æ—Å—É!\n"
        "‚Ä¢ –ë–æ–Ω—É—Å–Ω—ã–µ –æ—á–∫–∏ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –∑–∞ –ù–ï–ü–†–ï–†–´–í–ù–û–°–¢–¨ –∏ –î–ò–°–¶–ò–ü–õ–ò–ù–£\n"
        "‚Ä¢ –ù–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è –∫ –°–ê–ë–û–¢–ê–ñ–£\n\n"
        "–ò–î–ï–û–õ–û–ì–ò–ß–ï–°–ö–ò–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:\n"
        "‚òÖ –ü–û–ú–ù–ò! –ö–∞–∂–¥—ã–π –ü–ê–î–ê–Æ–©–ò–ô –ë–õ–û–ö –°–õ–£–ñ–ò–¢ –í–ï–õ–ò–ö–û–ú–£ –î–ï–õ–£ –ü–ê–†–¢–ò–ò! ‚òÖ\n\n"
        "–û–°–û–ë–´–ï –£–ö–ê–ó–ê–ù–ò–Ø:\n"
        "‚Ä¢ –ö—Ä–∞—Å–Ω–∞—è –ª–∏–Ω–∏—è: –ó–û–ù–ê –ì–û–°–£–î–ê–†–°–¢–í–ï–ù–ù–û–ô –û–ü–ê–°–ù–û–°–¢–ò\n"
        "‚Ä¢ –í—ã—Ö–æ–¥ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –ª–∏–Ω–∏–∏ —Ä–∞–≤–Ω–æ—Å–∏–ª–µ–Ω –ì–û–°–£–î–ê–†–°–¢–í–ï–ù–ù–û–ô –ò–ó–ú–ï–ù–ï\n\n"
        "–ù–ê–ö–ê–ó–ê–ù–ò–Ø –ó–ê –ù–ï–≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–¨:\n"
        "1. –ü–µ—Ä–≤–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: –ü—É–±–ª–∏—á–Ω–æ–µ –ø–æ—Ä–∏—Ü–∞–Ω–∏–µ\n"
        "2. –í—Ç–æ—Ä–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ\n"
        "3. –¢—Ä–µ—Ç—å–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: IMMEDIATE VACATION TO SIBERIAN REDESIGN CAMP\n\n"
        "–ü–û–ú–ù–ò, –¢–û–í–ê–†–ò–©: \n"
        "–í –ò–ì–†–ï, –ö–ê–ö –ò –í –ñ–ò–ó–ù–ò - –ü–ê–†–¢–ò–Ø –í–°–ï–ì–î–ê –ü–†–ê–í–ê!\n\n"
        "–ü–æ–¥–ø–∏—Å—å: –ù–∞—á–∞–ª—å–Ω–∏–∫ –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ë–ª–æ—á–Ω–æ–π –î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã\n"
        "–ü–µ—á–∞—Ç—å: –°–¢–†–û–ì–û –°–ï–ö–†–ï–¢–ù–û\n\n"
        "P.S. Big Brother is watching your blocks!\n", -1);

    // Add text view to scrolled window
    gtk_container_add(GTK_CONTAINER(scrolledWindow), textView);

    // Add scrolled window to content area
    gtk_container_add(GTK_CONTAINER(contentArea), scrolledWindow);

    // Set window size
    gtk_window_set_default_size(GTK_WINDOW(dialog), 800, 600);

    // Show all widgets
    gtk_widget_show_all(dialog);

    // Run dialog
    gtk_dialog_run(GTK_DIALOG(dialog));

    // Destroy dialog when closed
    gtk_widget_destroy(dialog);
  } else if (app->board->patrioticModeActive) {
    // Create dialog with American patriotic-style instructions
    GtkWidget *dialog = gtk_dialog_new_with_buttons(
        "üá∫üá∏ FREEDOM BLOCKS - OFFICIAL PATRIOT MANUAL ü¶Ö", 
        GTK_WINDOW(app->window), 
        GTK_DIALOG_MODAL, 
        "_USA! USA! USA!", 
        GTK_RESPONSE_OK, 
        NULL);

    // Get the content area
    GtkWidget *contentArea = gtk_dialog_get_content_area(GTK_DIALOG(dialog));
    gtk_container_set_border_width(GTK_CONTAINER(contentArea), 15);

    // Create a scrolled window with specific size
    GtkWidget *scrolledWindow = gtk_scrolled_window_new(NULL, NULL);
    gtk_scrolled_window_set_policy(GTK_SCROLLED_WINDOW(scrolledWindow), 
                                   GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
    gtk_widget_set_size_request(scrolledWindow, 850, 650); // Slightly larger for American style

    // Create a text view
    GtkWidget *textView = gtk_text_view_new();
    gtk_text_view_set_editable(GTK_TEXT_VIEW(textView), FALSE);
    gtk_text_view_set_wrap_mode(GTK_TEXT_VIEW(textView), GTK_WRAP_WORD);
    
    // Set a modern font for American corporate style
    PangoFontDescription *font_desc = pango_font_description_from_string("Sans 11");
    gtk_widget_override_font(textView, font_desc);
    pango_font_description_free(font_desc);

    // Get the buffer and set the text
    GtkTextBuffer *buffer = gtk_text_view_get_buffer(GTK_TEXT_VIEW(textView));
    gtk_text_buffer_set_text(buffer, 
        "üá∫üá∏ FREEDOM BLOCKS‚Ñ¢ - OFFICIAL PATRIOT TRAINING MANUAL ü¶Ö\n"
        "===============================================\n\n"
        "üìú DOCUMENT #1776-FB\n"
        "OFFICIAL GUIDELINES FOR AMERICAN BLOCK EXCELLENCE\n\n"
        "üéØ ATTENTION, FREEDOM FIGHTER!\n"
        "This manual contains CLASSIFIED FREEDOM TECHNIQUES for maximum block performance.\n"
        "Sharing with enemies of liberty is STRONGLY DISCOURAGED! üö´\n\n"
        "ü¶Ö CORE FREEDOM BLOCK COMMANDS: ü¶Ö\n\n"
        "1. üèÉ‚Äç‚ôÇÔ∏è LEFT/RIGHT MOVEMENT:\n"
        "   ‚Ä¢ Precise lateral freedom navigation (Your constitutional right!)\n"
        "   ‚Ä¢ Smooth as a Harley-Davidson on Route 66! üèçÔ∏è\n\n"
        "2. üîÑ ROTATION POWERS:\n"
        "   ‚Ä¢ Clockwise: The American way (like NASCAR!) üèÅ\n"
        "   ‚Ä¢ Counter-clockwise: Also available (because FREEDOM!) üóΩ\n\n"
        "3. ‚ö° VERTICAL ACCELERATION:\n"
        "   ‚Ä¢ Soft Drop: Gentle like a Southern breeze üåæ\n"
        "   ‚Ä¢ Hard Drop: DECISIVE like American military action! üí•\n\n"
        "üèÜ FREEDOM SCORING SYSTEM: üèÜ\n"
        "‚Ä¢ Every completed line = VICTORY FOR DEMOCRACY! üéâ\n"
        "‚Ä¢ Bonus points awarded for ENTREPRENEURIAL SPIRIT üíº\n"
        "‚Ä¢ High scores earn you AMERICAN DREAM STATUS! üåü\n\n"
        "‚≠ê PATRIOTIC PERFORMANCE GUIDELINES: ‚≠ê\n"
        "ü¶Ö REMEMBER! Every falling block represents AMERICAN INGENUITY! ü¶Ö\n\n"
        "üö® SPECIAL FREEDOM ZONES: üö®\n"
        "‚Ä¢ Red Line: DANGER ZONE (Like crossing into enemy territory!) ‚ö†Ô∏è\n"
        "‚Ä¢ Exceeding limits triggers EMERGENCY FREEDOM PROTOCOLS üöÅ\n\n"
        "üìà PERFORMANCE IMPROVEMENT PROGRAM: üìà\n"
        "1. First Challenge: MOTIVATIONAL COACHING SESSION üì£\n"
        "2. Second Challenge: ADVANCED FREEDOM TRAINING üéì\n"
        "3. Third Challenge: ALL-EXPENSES-PAID VACATION TO SUCCESS CAMP! üèïÔ∏è\n\n"
        "üéÆ PREMIUM FEATURES (Available with Freedom Pass‚Ñ¢): üéÆ\n"
        "‚Ä¢ Custom eagle sound effects ü¶Ö\n"
        "‚Ä¢ Patriotic victory animations üéÜ\n"
        "‚Ä¢ Real-time freedom level monitoring üìä\n"
        "‚Ä¢ Direct hotline to customer success team! ‚òéÔ∏è\n\n"
        "üí° PRO TIPS FROM TEAM AMERICA: üí°\n"
        "‚Ä¢ Coffee break every 15 minutes for optimal performance ‚òï\n"
        "‚Ä¢ Play while listening to country music for +10% accuracy üéµ\n"
        "‚Ä¢ Customize your experience in the Settings menu üîß\n"
        "‚Ä¢ Join our Discord community for exclusive tips! üí¨\n\n"
        "üõ°Ô∏è SATISFACTION GUARANTEE: üõ°Ô∏è\n"
        "Not completely amazed? Your freedom is FULLY REFUNDABLE! üíØ\n\n"
        "üìû 24/7 FREEDOM SUPPORT: üìû\n"
        "‚Ä¢ Hotline: 1-800-FREEDOM (1-800-373-3366)\n"
        "‚Ä¢ Email: support@freedomblocks.usa\n"
        "‚Ä¢ Live Chat: Available on our website\n"
        "‚Ä¢ Social Media: @FreedomBlocks on all platforms\n\n"
        "üá∫üá∏ REMEMBER, PATRIOT: üá∫üá∏\n"
        "IN BLOCKS, AS IN LIFE - AMERICA ALWAYS WINS!\n"
        "SUCCESS IS YOUR BIRTHRIGHT! üåü\n\n"
        "Approved by: Chief Freedom Officer, Jason 'Eagle' Rodriguez\n"
        "Certified by: Department of Digital Liberty\n"
        "Stamped: FREEDOM APPROVED ‚úÖ\n\n"
        "ü¶Ö P.S. Customer satisfaction ratings available on Yelp! ü¶Ö\n"
        "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê \"Best block game ever! So American!\" - PatriotGamer2025\n", -1);

    // Add text view to scrolled window
    gtk_container_add(GTK_CONTAINER(scrolledWindow), textView);

    // Add scrolled window to content area
    gtk_container_add(GTK_CONTAINER(contentArea), scrolledWindow);

    // Set window size
    gtk_window_set_default_size(GTK_WINDOW(dialog), 850, 650);

    // Show all widgets
    gtk_widget_show_all(dialog);

    // Run dialog
    gtk_dialog_run(GTK_DIALOG(dialog));

    // Destroy dialog when closed
    gtk_widget_destroy(dialog);
  } else {
    // Original instructions dialog code (similar modifications)
    GtkWidget *dialog = gtk_dialog_new_with_buttons(
        "Instructions", GTK_WINDOW(app->window), GTK_DIALOG_MODAL, "_OK",
        GTK_RESPONSE_OK, NULL);

    // Get the content area
    GtkWidget *contentArea = gtk_dialog_get_content_area(GTK_DIALOG(dialog));
    gtk_container_set_border_width(GTK_CONTAINER(contentArea), 15);

    // Create a scrolled window with specific size
    GtkWidget *scrolledWindow = gtk_scrolled_window_new(NULL, NULL);
    gtk_scrolled_window_set_policy(GTK_SCROLLED_WINDOW(scrolledWindow), 
                                   GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
    gtk_widget_set_size_request(scrolledWindow, 800, 600); // Large, explicit size

    // Create a text view
    GtkWidget *textView = gtk_text_view_new();
    gtk_text_view_set_editable(GTK_TEXT_VIEW(textView), FALSE);
    gtk_text_view_set_wrap_mode(GTK_TEXT_VIEW(textView), GTK_WRAP_WORD);

    // Set a monospace font for better readability
    PangoFontDescription *font_desc = pango_font_description_from_string("Monospace 10");
    gtk_widget_override_font(textView, font_desc);
    pango_font_description_free(font_desc);

    // Get the buffer and set the text
    GtkTextBuffer *buffer = gtk_text_view_get_buffer(GTK_TEXT_VIEW(textView));
    gtk_text_buffer_set_text(buffer, 
        "Tetrimone Instructions:\n\n"
        "Goal: Arrange falling blocks to complete lines.\n\n"
        "Controls:\n"
        "‚Ä¢ Left/Right Arrow or A/D: Move block left/right\n"
        "‚Ä¢ Up Arrow or W: Rotate block clockwise\n"
        "‚Ä¢ Z: Rotate block counter-clockwise\n"
        "‚Ä¢ Down Arrow or S: Move block down (soft drop)\n"
        "‚Ä¢ Space: Hard drop (instantly places block at bottom)\n"
        "‚Ä¢ P: Pause/Resume game\n"
        "‚Ä¢ R: Restart game when game over\n"
        "‚Ä¢ N: New game (when paused)\n"
        "‚Ä¢ Q: Quit game (when paused)\n\n"
        "Controller Support:\n"
        "‚Ä¢ D-pad/Analog: Move piece\n"
        "‚Ä¢ A/B buttons: Rotate piece\n"
        "‚Ä¢ X button: Hard drop\n"
        "‚Ä¢ Start: Pause/Resume\n"
        "‚Ä¢ Custom mapping available in Options menu\n\n"
        "Scoring:\n"
        "‚Ä¢ 1 line: 40 √ó level\n"
        "‚Ä¢ 2 lines: 100 √ó level\n"
        "‚Ä¢ 3 lines: 300 √ó level\n"
        "‚Ä¢ 4 lines: 1200 √ó level\n"
        "‚Ä¢ Sequence bonus: 10% extra per consecutive clear\n"
        "‚Ä¢ Consistency bonus: 20% extra for repeating same line count\n"
        "‚Ä¢ Hard drops: 2 points per cell\n\n"
        "Levels:\n"
        "‚Ä¢ Every 10 lines cleared increases the level\n"
        "‚Ä¢ Higher levels increase speed and points\n"
        "‚Ä¢ Color themes change with level progression\n"
        "‚Ä¢ Difficulty can be adjusted in Options menu\n\n"
        "Tips:\n"
        "‚Ä¢ Keep the stack low and even\n"
        "‚Ä¢ Save I-pieces for Tetrimone clears (4 lines)\n"
        "‚Ä¢ Watch the preview for the next piece\n"
        "‚Ä¢ Red line indicates the game over zone\n"
        "‚Ä¢ Try to build sequences by clearing lines consecutively", -1);

    // Add text view to scrolled window
    gtk_container_add(GTK_CONTAINER(scrolledWindow), textView);

    // Add scrolled window to content area
    gtk_container_add(GTK_CONTAINER(contentArea), scrolledWindow);

    // Set window size
    gtk_window_set_default_size(GTK_WINDOW(dialog), 800, 600);

    // Show all widgets
    gtk_widget_show_all(dialog);

    // Run dialog
    gtk_dialog_run(GTK_DIALOG(dialog));

    // Destroy dialog when closed
    gtk_widget_destroy(dialog);
  }
}
