name: Build Tetrimone

on:
  push:
    branches: [ master, dev ]
    paths:
      - '**.cpp'
      - '**.h'
      - 'Makefile'
      - '**/Makefile'
      - '**.yml'
  pull_request:
    branches: [ master, dev ]
    paths:
      - '**.cpp'
      - '**.h'
      - 'Makefile'
      - '**/Makefile'
      - '**.yml'
  workflow_dispatch:

jobs:
  build-mingw-gtk:
    runs-on: ubuntu-latest
    container: 
      image: fedora:41
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        dnf -y install ffmpeg mingw64-gcc mingw64-gcc-c++ mingw64-gtk3 mingw64-gtkmm30 wine wine-devel binutils make zip unzip libzip-devel mingw64-libzip mingw64-SDL2 mingw64-SDL2_mixer fluidsynth sdl12-compat-devel gcc-c++ SDL2-devel

    - name: Build GTK Version
      run: |
        make windows

    - name: Copy Resources and Collect DLLs
      working-directory: build/windows
      run: |
        cp ../../icon.ico .

    - name: Create ZIP Archive
      working-directory: build/windows
      run: |
        zip -r ../../Tetrimone-GTK.zip ./*

    - name: Upload Build Artifacts for Windows MSI Creation
      uses: actions/upload-artifact@v4
      with:
        name: tetrimone-build-${{ github.ref_name }}
        path: build/windows/

  create-professional-msi:
    needs: [build-mingw-gtk]
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: tetrimone-build-${{ github.ref_name }}
        path: build/windows/

    - name: Install WiX Toolset
      run: |
        # Download and install WiX Toolset
        Invoke-WebRequest -Uri "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311.exe" -OutFile "wix311.exe"
        Start-Process -FilePath "wix311.exe" -ArgumentList "/quiet" -Wait
        
        # Add WiX to PATH
        $env:PATH += ";C:\Program Files (x86)\WiX Toolset v3.11\bin"
        echo "C:\Program Files (x86)\WiX Toolset v3.11\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Create Professional WiX Installer
      working-directory: build/windows
      run: |
        # List available files for debugging
        Write-Host "Available files in build directory:"
        Get-ChildItem -Recurse | Format-Table Name, Length, LastWriteTime
        
        # Create MIT license RTF file for EULA
        @"
        {\rtf1\ansi\deff0 {\fonttbl {\f0 Times New Roman;}}
        \f0\fs24
        MIT License

        Copyright (c) 2025 Jason Hall

        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        }
"@ | Out-File -FilePath "License.rtf" -Encoding UTF8
        
        Write-Host "Created License.rtf for EULA"
        
        # Check for required files
        $requiredFiles = @("tetrimone.exe", "icon.ico")
        foreach ($file in $requiredFiles) {
          if (-not (Test-Path $file)) {
            Write-Error "Required file missing: $file"
            exit 1
          }
        }
        
        # Generate DLL entries - include ALL DLLs
        $dllEntries = ""
        Get-ChildItem -Filter "*.dll" | ForEach-Object {
          $safeId = $_.Name -replace '[^a-zA-Z0-9]', '_'
          $dllEntries += "                    <File Id=`"$safeId`" Name=`"$($_.Name)`" Source=`"$($_.Name)`"/>`n"
        }
        
        # Generate entries for other files (like .o files, .zip files, etc.)
        $otherFiles = ""
        Get-ChildItem | Where-Object { $_.Extension -in @('.o', '.zip', '.ini', '.compiled') -and $_.Name -ne 'icon.ico' } | ForEach-Object {
          $safeId = ($_.Name -replace '[^a-zA-Z0-9]', '_') + '_file'
          $otherFiles += "                    <File Id=`"$safeId`" Name=`"$($_.Name)`" Source=`"$($_.Name)`"/>`n"
        }
        
        # Generate components for subdirectories with files
        $subdirComponents = ""
        $subdirComponentRefs = ""
        
        # Check for lib directory structure
        if (Test-Path "lib") {
          Write-Host "Found lib directory, including GTK runtime files..."
          $libFiles = Get-ChildItem -Path "lib" -Recurse -File
          if ($libFiles.Count -gt 0) {
            $subdirComponents += @"
            
                  <Directory Id="LibDirWithFiles" Name="lib">
                    <Component Id="LibFiles" Guid="A1B2C3D4-E5F6-7890-ABCD-EF1234567890">
"@
            foreach ($file in $libFiles) {
              $relativePath = $file.FullName.Substring((Get-Location).Path.Length + 1) -replace '\\', '/'
              $safeId = ($relativePath -replace '[^a-zA-Z0-9]', '_') + '_libfile'
              $subdirComponents += "`n                      <File Id=`"$safeId`" Name=`"$($file.Name)`" Source=`"$relativePath`"/>"
            }
            $subdirComponents += @"

                    </Component>
                  </Directory>
"@
            $subdirComponentRefs += "              <ComponentRef Id=`"LibFiles`" />`n"
          }
        }
        
        # Check for share directory structure  
        if (Test-Path "share") {
          Write-Host "Found share directory, including GTK theme/schema files..."
          $shareFiles = Get-ChildItem -Path "share" -Recurse -File
          if ($shareFiles.Count -gt 0) {
            $subdirComponents += @"
            
                  <Directory Id="ShareDirWithFiles" Name="share">
                    <Component Id="ShareFiles" Guid="B2C3D4E5-F617-8901-BCDE-F23456789012">
"@
            foreach ($file in $shareFiles) {
              $relativePath = $file.FullName.Substring((Get-Location).Path.Length + 1) -replace '\\', '/'
              $safeId = ($relativePath -replace '[^a-zA-Z0-9]', '_') + '_sharefile'
              $subdirComponents += "`n                      <File Id=`"$safeId`" Name=`"$($file.Name)`" Source=`"$relativePath`"/>"
            }
            $subdirComponents += @"

                    </Component>
                  </Directory>
"@
            $subdirComponentRefs += "              <ComponentRef Id=`"ShareFiles`" />`n"
          }
        }
        
        Write-Host "Generated $((Get-ChildItem -Filter '*.dll').Count) DLL entries"
        Write-Host "Generated $((Get-ChildItem | Where-Object { $_.Extension -in @('.o', '.zip', '.ini', '.compiled') -and $_.Name -ne 'icon.ico' }).Count) other file entries"

        # Create professional WiX installer with full Windows features
        @"
        <?xml version="1.0" encoding="UTF-8"?>
        <Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" 
             xmlns:ui="http://schemas.microsoft.com/wix/UIExtension">
          
          <Product Id="*" 
                   Name="Tetrimone" 
                   Language="1033" 
                   Version="1.0.${{ github.run_number }}" 
                   Manufacturer="Jason Hall" 
                   UpgradeCode="15F96C34-8D42-417A-9E1B-CC952F7D6713">
            
            <Package InstallerVersion="500" 
                     Compressed="yes" 
                     InstallScope="perMachine"
                     Description="Tetrimone - Falling Block Puzzle Game"
                     Comments="A modern falling block puzzle game with smooth animations and multiple themes"
                     Keywords="Puzzle,Game,Blocks,Falling" />
            
            <!-- Upgrade handling -->
            <MajorUpgrade DowngradeErrorMessage="A newer version of Tetrimone is already installed." />
            
            <!-- Media template -->
            <MediaTemplate EmbedCab="yes" />
            
            <!-- Properties for Add/Remove Programs -->
            <Property Id="ARPPRODUCTICON" Value="TetrimoneIcon" />
            <Property Id="ARPHELPLINK" Value="https://github.com/jasonbrianhall/tetrimone" />
            <Property Id="ARPURLINFOABOUT" Value="https://github.com/jasonbrianhall/tetrimone" />
            <Property Id="ARPNOREPAIR" Value="yes" Secure="yes" />
            <Property Id="ARPNOMODIFY" Value="yes" Secure="yes" />
            
            <!-- License Agreement -->
            <WixVariable Id="WixUILicenseRtf" Value="License.rtf" />
            
            <!-- Launch condition -->
            <Condition Message="This application requires Windows 7 or higher.">
              <![CDATA[Installed OR (VersionNT >= 601)]]>
            </Condition>
            
            <!-- Directory structure -->
            <Directory Id="TARGETDIR" Name="SourceDir">
              <Directory Id="ProgramFilesFolder">
                <Directory Id="INSTALLFOLDER" Name="Tetrimone">
                  
                  <!-- Main application files -->
                  <Component Id="MainExecutable" Guid="A47D52C8-3E95-48F6-B25F-1E6C9D4A8D34">
                    <File Id="MainEXE" 
                          Name="tetrimone.exe" 
                          Source="tetrimone.exe" 
                          KeyPath="yes" />
                    
                    <File Id="IconFile" Name="icon.ico" Source="icon.ico"/>
                    
                    <!-- All DLL files -->
                    $dllEntries
                    
                    <!-- Other required files -->
                    $otherFiles
                  </Component>
                  
                  <!-- Dynamic subdirectories with files -->
                  $subdirComponents
                </Directory>
              </Directory>
              
              <!-- Start Menu shortcuts -->
              <Directory Id="ProgramMenuFolder">
                <Directory Id="ApplicationProgramsFolder" Name="Tetrimone">
                  <Component Id="ApplicationShortcuts" Guid="F8E2D459-F6A1-4B53-9C72-E31D8FE52D69">
                    <Shortcut Id="ApplicationStartMenu" 
                             Name="Tetrimone" 
                             Target="[INSTALLFOLDER]tetrimone.exe" 
                             WorkingDirectory="INSTALLFOLDER"
                             Icon="TetrimoneIcon"
                             Description="Play Tetrimone - Falling Block Puzzle Game" />
                    
                    <Shortcut Id="UninstallShortcut"
                             Name="Uninstall Tetrimone"
                             Target="[SystemFolder]msiexec.exe"
                             Arguments="/x [ProductCode]"
                             Description="Uninstall Tetrimone" />
                    
                    <RemoveFolder Id="ApplicationProgramsFolder" On="uninstall"/>
                    <RegistryValue Root="HKCU" 
                                  Key="Software\Tetrimone" 
                                  Name="installed" 
                                  Type="integer" 
                                  Value="1" 
                                  KeyPath="yes"/>
                  </Component>
                </Directory>
              </Directory>
              
              <!-- Desktop shortcut -->
              <Directory Id="DesktopFolder" Name="Desktop">
                <Component Id="DesktopShortcut" Guid="A5B7F8E2-C3D4-4E5F-9A8B-7C6D5E4F3A2B">
                  <Shortcut Id="DesktopShortcut" 
                           Name="Tetrimone" 
                           Target="[INSTALLFOLDER]tetrimone.exe" 
                           WorkingDirectory="INSTALLFOLDER"
                           Icon="TetrimoneIcon"
                           Description="Play Tetrimone - Falling Block Puzzle Game" />
                  <RegistryValue Root="HKCU" 
                                Key="Software\Tetrimone" 
                                Name="DesktopShortcut" 
                                Type="integer" 
                                Value="1" 
                                KeyPath="yes"/>
                </Component>
              </Directory>
            </Directory>
            
            <!-- Features -->
            <Feature Id="MainApplication" 
                     Title="Tetrimone Game" 
                     Description="The main Tetrimone application and game files."
                     Level="1"
                     Display="expand"
                     AllowAdvertise="no">
              <ComponentRef Id="MainExecutable" />
              $subdirComponentRefs
              
              <Feature Id="Shortcuts" 
                       Title="Start Menu Shortcuts" 
                       Description="Add shortcuts to the Start Menu."
                       Level="1">
                <ComponentRef Id="ApplicationShortcuts" />
              </Feature>
              
              <Feature Id="DesktopShortcutFeature" 
                       Title="Desktop Shortcut" 
                       Description="Add a shortcut to the Desktop."
                       Level="1000">
                <ComponentRef Id="DesktopShortcut" />
              </Feature>
            </Feature>
            
            <!-- Full WiX UI with License Agreement -->
            <UIRef Id="WixUI_InstallDir" />
            <UIRef Id="WixUI_ErrorProgressText" />
            
            <!-- Custom install directory -->
            <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER" />
            
            <!-- Launch after install -->
            <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOXTEXT" 
                      Value="Launch Tetrimone" />
            <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOX" Value="1" />
            
            <CustomAction Id="LaunchApplication"
                          BinaryKey="WixCA"
                          DllEntry="WixShellExec"
                          Execute="immediate"
                          Return="ignore"
                          Impersonate="yes" />
            
            <CustomAction Id="SetLaunchApp" 
                          Property="LaunchApplication"
                          Value="[INSTALLFOLDER]tetrimone.exe" />
            
            <InstallExecuteSequence>
              <Custom Action="SetLaunchApp" After="InstallFiles">
                WIXUI_EXITDIALOGOPTIONALCHECKBOX = 1 and NOT Installed
              </Custom>
              <Custom Action="LaunchApplication" After="SetLaunchApp">
                WIXUI_EXITDIALOGOPTIONALCHECKBOX = 1 and NOT Installed
              </Custom>
            </InstallExecuteSequence>
            
            <!-- Icon -->
            <Icon Id="TetrimoneIcon" SourceFile="icon.ico"/>
            
          </Product>
        </Wix>
        "@ | Out-File -FilePath "installer.wxs" -Encoding UTF8

        # Compile the installer
        Write-Host "Building professional MSI installer with full Windows WiX..."
        Write-Host "Running candle.exe to compile WXS..."
        candle.exe installer.wxs -ext WixUIExtension -ext WixUtilExtension
        if ($LASTEXITCODE -ne 0) {
          Write-Error "Candle.exe failed with exit code: $LASTEXITCODE"
          exit $LASTEXITCODE
        }
        
        Write-Host "Running light.exe to create MSI..."
        light.exe installer.wixobj -ext WixUIExtension -ext WixUtilExtension -out "../../Tetrimone-GTK.msi"
        if ($LASTEXITCODE -ne 0) {
          Write-Error "Light.exe failed with exit code: $LASTEXITCODE"
          exit $LASTEXITCODE
        }

    - name: Create ZIP from Windows Build
      working-directory: build/windows  
      run: |
        Compress-Archive -Path * -DestinationPath "../../Tetrimone-GTK.zip"

    - name: Upload Final Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tetrimone-artifacts-${{ github.ref_name }}
        path: |
          Tetrimone-GTK.msi
          Tetrimone-GTK.zip

  create-release:
    needs: [create-professional-msi]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: tetrimone-artifacts-master
        path: artifacts

    - name: Create Public Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/Tetrimone-GTK.msi
          artifacts/Tetrimone-GTK.zip
        tag_name: v${{ github.run_number }}
        name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          Official release build
          Commit: ${{ github.sha }}
          Build number: ${{ github.run_number }}
          
          This release includes:
          - Windows GTK installer (Tetrimone-GTK.msi) - Professional installer with custom install directory choice
          - Windows GTK portable version (Tetrimone-GTK.zip) - Extract and run anywhere
          
          ## Features:
          - Custom installation directory selection
          - Optional desktop shortcut
          - Start Menu shortcuts with uninstaller
          - "Launch after install" option
          - Proper Add/Remove Programs integration
          - Automatic upgrade handling

  create-dev-release:
    needs: [create-professional-msi]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: tetrimone-artifacts-dev
        path: artifacts

    - name: Create Private Dev Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/Tetrimone-GTK.msi
          artifacts/Tetrimone-GTK.zip
        tag_name: dev-${{ github.run_number }}
        name: Dev Build ${{ github.run_number }}
        draft: true
        prerelease: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          **🔒 PRIVATE DEVELOPMENT BUILD - NOT FOR PUBLIC USE**
          
          Development build from dev branch
          Commit: ${{ github.sha }}
          Build number: ${{ github.run_number }}
          
          ⚠️ **Warning**: This is an unstable development build that may contain bugs, experimental features, or incomplete functionality.
          
          This release includes:
          - Windows GTK installer (Tetrimone-GTK.msi) - Professional installer with custom install directory choice
          - Windows GTK portable version (Tetrimone-GTK.zip) - Extract and run anywhere
